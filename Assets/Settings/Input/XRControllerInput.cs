//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Settings/Input/XRControllerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Cuboid
{
    public partial class @XRControllerInput : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @XRControllerInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""XRControllerInput"",
    ""maps"": [
        {
            ""name"": ""LeftHand"",
            ""id"": ""7bb06433-c331-428d-be57-695fe9f95052"",
            ""actions"": [
                {
                    ""name"": ""Primary Button"",
                    ""type"": ""Button"",
                    ""id"": ""87e2399b-5600-4a34-aaaa-d305ced6df94"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary Button"",
                    ""type"": ""Button"",
                    ""id"": ""a7a9e357-5332-4042-8588-5936953cdadd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip Button"",
                    ""type"": ""Button"",
                    ""id"": ""16df6c61-e2b8-42e0-8375-01906266ff80"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger Button"",
                    ""type"": ""Button"",
                    ""id"": ""d903baaf-b238-4056-83aa-1eb10c47d910"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll 2D"",
                    ""type"": ""Value"",
                    ""id"": ""ba528855-629d-4501-9c28-d8e8dab72822"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick Button Pressed"",
                    ""type"": ""Button"",
                    ""id"": ""2d725c2a-c35b-42f9-957a-8ee5dac9d43c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""23670068-aec1-4e67-9e78-cdcaef2d4516"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Primary Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f68974a-5b00-4384-9b61-e3e513b6b98d"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Secondary Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abb240ce-8ad8-4f72-9e38-f0e3dce115bc"",
                    ""path"": ""<XRController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bae61323-a0d1-4bff-89eb-cb4c9f55b39b"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c891dcd0-fe8f-4264-b787-3fa0d6e6ce7a"",
                    ""path"": ""<XRController>{LeftHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Scroll 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""451252c8-6413-4d92-a84a-d671360ae454"",
                    ""path"": ""<XRController>{LeftHand}/primary2DAxisClick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Joystick Button Pressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16db7530-7621-4607-96d6-7d961b0d003d"",
                    ""path"": ""<XRController>{LeftHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Joystick Button Pressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""LeftHand Tracking"",
            ""id"": ""3fbd4fd0-8cc5-4821-b0b3-735d3bd38460"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""c1960459-c87b-4df1-9bd7-270618cf7e5a"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""3095f735-237b-480d-8dc3-ed5be1b5ed2f"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""00934d3b-e8e3-4bff-b34d-cf0f7fe731e4"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""320163b7-304d-48f9-bae4-7f904f7d5fbb"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""39579cdc-5c84-4d3c-894f-65258ea605c6"",
                    ""path"": ""<XRController>{LeftHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""d0262fa5-9c67-4d5e-aacd-87661e5e145d"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""fcfa54dc-dfd6-478c-a1c8-df1882750572"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""c6d3a689-9957-42a8-946e-91afd83d1de4"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""8fc87872-5c5b-43e7-a463-49e4419c640e"",
                    ""path"": ""<XRController>{LeftHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""19706a95-30f3-428f-8f6c-03780c55156b"",
                    ""path"": ""<XRController>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""74d01df3-6865-440b-b289-4330bd6a47dd"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5895e5a6-1811-409a-85b8-c0b4139aa709"",
                    ""path"": ""<XRController>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""LeftHand Visuals"",
            ""id"": ""fdaab635-5a9b-4179-9fce-70e246c4f02a"",
            ""actions"": [
                {
                    ""name"": ""Primary Button Value"",
                    ""type"": ""Value"",
                    ""id"": ""cc906b0f-bbc2-4177-87fa-527927592837"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Secondary Button Value"",
                    ""type"": ""Value"",
                    ""id"": ""c5ae9d16-3f5f-4c4a-98e2-359596fed001"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip Value"",
                    ""type"": ""Value"",
                    ""id"": ""969e194e-5980-44d7-9bcb-813c92601a99"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger Value"",
                    ""type"": ""Value"",
                    ""id"": ""d6e28fbe-edfd-4818-9916-54173ebaab9f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""db54824b-6b36-4f33-92ae-79918ed16655"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Primary Button Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc60e52d-5e8b-4685-870f-c4a54f12ae9a"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Secondary Button Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4b3d292-ca99-4d62-9bba-4ca6075b6645"",
                    ""path"": ""<XRController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be0acbc0-4c1e-43dc-8ec6-4276822a708d"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RightHand"",
            ""id"": ""994c2c06-fcc9-42d4-8096-4d18b35694ef"",
            ""actions"": [
                {
                    ""name"": ""Primary Button"",
                    ""type"": ""Button"",
                    ""id"": ""68c719e8-9493-489b-b410-b338d38c89e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary Button"",
                    ""type"": ""Button"",
                    ""id"": ""35821882-78f1-4dd2-b352-830a6fc770c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grip Button"",
                    ""type"": ""Button"",
                    ""id"": ""4bdc8608-55bf-4458-8644-a3f631c089b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger Button"",
                    ""type"": ""Button"",
                    ""id"": ""5f382cc7-a18f-4b62-9952-8f60c6ddf4cb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll 2D"",
                    ""type"": ""Value"",
                    ""id"": ""98d26ccc-3e42-4fe6-a55d-bdcb47232897"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick Button Pressed"",
                    ""type"": ""Button"",
                    ""id"": ""2d3483de-4615-48c9-b2ab-010a32a8ba7b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4fb6804d-e5c3-4260-afff-d965fed00235"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Primary Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a0fcf54-8983-4b7c-931b-5a6148e4752c"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Secondary Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11801a24-6ceb-4955-aa81-f4e86aa0b9e4"",
                    ""path"": ""<XRController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9a5c416-9e63-45cd-8dfd-ecfd7e07748a"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger Button"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c9d47b6-93fa-4957-96af-1239615fb993"",
                    ""path"": ""<XRController>{RightHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Scroll 2D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""677b1549-fc66-4427-b144-a95d4042dc1d"",
                    ""path"": ""<XRController>{RightHand}/primary2DAxisClick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Joystick Button Pressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb3100b6-a185-4fb1-b00a-a49854a305aa"",
                    ""path"": ""<XRController>{RightHand}/thumbstickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Joystick Button Pressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RightHand Tracking"",
            ""id"": ""3fbbf868-03dd-4b2f-a858-325ec51ba1ad"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""15bf4bc1-a6b0-4168-bec4-0bc625776ce9"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""65fbdb41-2a9f-4079-a815-e5ae44d09d7c"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""76fa55f4-f5e5-452e-ba81-57cce105a3ee"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""6404e7da-7d0f-4a85-9c85-398b35aea361"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""b439859e-d7e5-44db-9110-5657c6d1d014"",
                    ""path"": ""<XRController>{RightHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""9c9c7b6f-e105-4ccd-a7ad-0d3dda6e38f9"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""59f46ad3-4a9e-4ad1-9f2b-6956c5526c30"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""0922780e-8e08-4217-9570-aaaa8145bb5e"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""425be758-e1db-4918-8531-60589381dfa6"",
                    ""path"": ""<XRController>{RightHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""d5602daf-fc27-4f89-a9c1-41d3e6a00dbf"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""e8c95f4c-517f-4ecb-bf43-ba84fa92f5a3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""edb60dc6-b50f-4c01-bbce-98eecc396ab4"",
                    ""path"": ""<XRController>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""RightHand Visuals"",
            ""id"": ""22812894-99d3-426e-bc19-9497655b937f"",
            ""actions"": [
                {
                    ""name"": ""Primary Button Value"",
                    ""type"": ""Value"",
                    ""id"": ""5940661b-38e9-44f8-9426-4a24ecfb6a91"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Secondary Button Value"",
                    ""type"": ""Value"",
                    ""id"": ""1dad686f-9fe8-497a-b446-ff13be9e2d54"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip Value"",
                    ""type"": ""Value"",
                    ""id"": ""503d6e5f-ff8e-4c77-a848-97a88ee13fe1"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger Value"",
                    ""type"": ""Value"",
                    ""id"": ""42dbe3f8-7985-4a36-8240-fe912dece44a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2c01a406-2926-491f-bc97-ee12c2d11955"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Primary Button Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fd6f932-5d0a-4670-9b01-d0ca85c00a54"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Secondary Button Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5843a2c-57b2-42f1-822f-644b71380c9f"",
                    ""path"": ""<XRController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cebe09f7-ea58-419d-9325-b63edea42da4"",
                    ""path"": ""<XRController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Trigger Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Generic XR Controller"",
            ""bindingGroup"": ""Generic XR Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // LeftHand
            m_LeftHand = asset.FindActionMap("LeftHand", throwIfNotFound: true);
            m_LeftHand_PrimaryButton = m_LeftHand.FindAction("Primary Button", throwIfNotFound: true);
            m_LeftHand_SecondaryButton = m_LeftHand.FindAction("Secondary Button", throwIfNotFound: true);
            m_LeftHand_GripButton = m_LeftHand.FindAction("Grip Button", throwIfNotFound: true);
            m_LeftHand_TriggerButton = m_LeftHand.FindAction("Trigger Button", throwIfNotFound: true);
            m_LeftHand_Scroll2D = m_LeftHand.FindAction("Scroll 2D", throwIfNotFound: true);
            m_LeftHand_JoystickButtonPressed = m_LeftHand.FindAction("Joystick Button Pressed", throwIfNotFound: true);
            // LeftHand Tracking
            m_LeftHandTracking = asset.FindActionMap("LeftHand Tracking", throwIfNotFound: true);
            m_LeftHandTracking_Position = m_LeftHandTracking.FindAction("Position", throwIfNotFound: true);
            m_LeftHandTracking_Rotation = m_LeftHandTracking.FindAction("Rotation", throwIfNotFound: true);
            m_LeftHandTracking_TrackingState = m_LeftHandTracking.FindAction("Tracking State", throwIfNotFound: true);
            // LeftHand Visuals
            m_LeftHandVisuals = asset.FindActionMap("LeftHand Visuals", throwIfNotFound: true);
            m_LeftHandVisuals_PrimaryButtonValue = m_LeftHandVisuals.FindAction("Primary Button Value", throwIfNotFound: true);
            m_LeftHandVisuals_SecondaryButtonValue = m_LeftHandVisuals.FindAction("Secondary Button Value", throwIfNotFound: true);
            m_LeftHandVisuals_GripValue = m_LeftHandVisuals.FindAction("Grip Value", throwIfNotFound: true);
            m_LeftHandVisuals_TriggerValue = m_LeftHandVisuals.FindAction("Trigger Value", throwIfNotFound: true);
            // RightHand
            m_RightHand = asset.FindActionMap("RightHand", throwIfNotFound: true);
            m_RightHand_PrimaryButton = m_RightHand.FindAction("Primary Button", throwIfNotFound: true);
            m_RightHand_SecondaryButton = m_RightHand.FindAction("Secondary Button", throwIfNotFound: true);
            m_RightHand_GripButton = m_RightHand.FindAction("Grip Button", throwIfNotFound: true);
            m_RightHand_TriggerButton = m_RightHand.FindAction("Trigger Button", throwIfNotFound: true);
            m_RightHand_Scroll2D = m_RightHand.FindAction("Scroll 2D", throwIfNotFound: true);
            m_RightHand_JoystickButtonPressed = m_RightHand.FindAction("Joystick Button Pressed", throwIfNotFound: true);
            // RightHand Tracking
            m_RightHandTracking = asset.FindActionMap("RightHand Tracking", throwIfNotFound: true);
            m_RightHandTracking_Position = m_RightHandTracking.FindAction("Position", throwIfNotFound: true);
            m_RightHandTracking_Rotation = m_RightHandTracking.FindAction("Rotation", throwIfNotFound: true);
            m_RightHandTracking_TrackingState = m_RightHandTracking.FindAction("Tracking State", throwIfNotFound: true);
            // RightHand Visuals
            m_RightHandVisuals = asset.FindActionMap("RightHand Visuals", throwIfNotFound: true);
            m_RightHandVisuals_PrimaryButtonValue = m_RightHandVisuals.FindAction("Primary Button Value", throwIfNotFound: true);
            m_RightHandVisuals_SecondaryButtonValue = m_RightHandVisuals.FindAction("Secondary Button Value", throwIfNotFound: true);
            m_RightHandVisuals_GripValue = m_RightHandVisuals.FindAction("Grip Value", throwIfNotFound: true);
            m_RightHandVisuals_TriggerValue = m_RightHandVisuals.FindAction("Trigger Value", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // LeftHand
        private readonly InputActionMap m_LeftHand;
        private ILeftHandActions m_LeftHandActionsCallbackInterface;
        private readonly InputAction m_LeftHand_PrimaryButton;
        private readonly InputAction m_LeftHand_SecondaryButton;
        private readonly InputAction m_LeftHand_GripButton;
        private readonly InputAction m_LeftHand_TriggerButton;
        private readonly InputAction m_LeftHand_Scroll2D;
        private readonly InputAction m_LeftHand_JoystickButtonPressed;
        public struct LeftHandActions
        {
            private @XRControllerInput m_Wrapper;
            public LeftHandActions(@XRControllerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @PrimaryButton => m_Wrapper.m_LeftHand_PrimaryButton;
            public InputAction @SecondaryButton => m_Wrapper.m_LeftHand_SecondaryButton;
            public InputAction @GripButton => m_Wrapper.m_LeftHand_GripButton;
            public InputAction @TriggerButton => m_Wrapper.m_LeftHand_TriggerButton;
            public InputAction @Scroll2D => m_Wrapper.m_LeftHand_Scroll2D;
            public InputAction @JoystickButtonPressed => m_Wrapper.m_LeftHand_JoystickButtonPressed;
            public InputActionMap Get() { return m_Wrapper.m_LeftHand; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(LeftHandActions set) { return set.Get(); }
            public void SetCallbacks(ILeftHandActions instance)
            {
                if (m_Wrapper.m_LeftHandActionsCallbackInterface != null)
                {
                    @PrimaryButton.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnPrimaryButton;
                    @PrimaryButton.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnPrimaryButton;
                    @PrimaryButton.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnPrimaryButton;
                    @SecondaryButton.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnSecondaryButton;
                    @SecondaryButton.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnSecondaryButton;
                    @SecondaryButton.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnSecondaryButton;
                    @GripButton.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnGripButton;
                    @GripButton.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnGripButton;
                    @GripButton.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnGripButton;
                    @TriggerButton.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTriggerButton;
                    @TriggerButton.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTriggerButton;
                    @TriggerButton.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnTriggerButton;
                    @Scroll2D.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnScroll2D;
                    @Scroll2D.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnScroll2D;
                    @Scroll2D.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnScroll2D;
                    @JoystickButtonPressed.started -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnJoystickButtonPressed;
                    @JoystickButtonPressed.performed -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnJoystickButtonPressed;
                    @JoystickButtonPressed.canceled -= m_Wrapper.m_LeftHandActionsCallbackInterface.OnJoystickButtonPressed;
                }
                m_Wrapper.m_LeftHandActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @PrimaryButton.started += instance.OnPrimaryButton;
                    @PrimaryButton.performed += instance.OnPrimaryButton;
                    @PrimaryButton.canceled += instance.OnPrimaryButton;
                    @SecondaryButton.started += instance.OnSecondaryButton;
                    @SecondaryButton.performed += instance.OnSecondaryButton;
                    @SecondaryButton.canceled += instance.OnSecondaryButton;
                    @GripButton.started += instance.OnGripButton;
                    @GripButton.performed += instance.OnGripButton;
                    @GripButton.canceled += instance.OnGripButton;
                    @TriggerButton.started += instance.OnTriggerButton;
                    @TriggerButton.performed += instance.OnTriggerButton;
                    @TriggerButton.canceled += instance.OnTriggerButton;
                    @Scroll2D.started += instance.OnScroll2D;
                    @Scroll2D.performed += instance.OnScroll2D;
                    @Scroll2D.canceled += instance.OnScroll2D;
                    @JoystickButtonPressed.started += instance.OnJoystickButtonPressed;
                    @JoystickButtonPressed.performed += instance.OnJoystickButtonPressed;
                    @JoystickButtonPressed.canceled += instance.OnJoystickButtonPressed;
                }
            }
        }
        public LeftHandActions @LeftHand => new LeftHandActions(this);

        // LeftHand Tracking
        private readonly InputActionMap m_LeftHandTracking;
        private ILeftHandTrackingActions m_LeftHandTrackingActionsCallbackInterface;
        private readonly InputAction m_LeftHandTracking_Position;
        private readonly InputAction m_LeftHandTracking_Rotation;
        private readonly InputAction m_LeftHandTracking_TrackingState;
        public struct LeftHandTrackingActions
        {
            private @XRControllerInput m_Wrapper;
            public LeftHandTrackingActions(@XRControllerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_LeftHandTracking_Position;
            public InputAction @Rotation => m_Wrapper.m_LeftHandTracking_Rotation;
            public InputAction @TrackingState => m_Wrapper.m_LeftHandTracking_TrackingState;
            public InputActionMap Get() { return m_Wrapper.m_LeftHandTracking; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(LeftHandTrackingActions set) { return set.Get(); }
            public void SetCallbacks(ILeftHandTrackingActions instance)
            {
                if (m_Wrapper.m_LeftHandTrackingActionsCallbackInterface != null)
                {
                    @Position.started -= m_Wrapper.m_LeftHandTrackingActionsCallbackInterface.OnPosition;
                    @Position.performed -= m_Wrapper.m_LeftHandTrackingActionsCallbackInterface.OnPosition;
                    @Position.canceled -= m_Wrapper.m_LeftHandTrackingActionsCallbackInterface.OnPosition;
                    @Rotation.started -= m_Wrapper.m_LeftHandTrackingActionsCallbackInterface.OnRotation;
                    @Rotation.performed -= m_Wrapper.m_LeftHandTrackingActionsCallbackInterface.OnRotation;
                    @Rotation.canceled -= m_Wrapper.m_LeftHandTrackingActionsCallbackInterface.OnRotation;
                    @TrackingState.started -= m_Wrapper.m_LeftHandTrackingActionsCallbackInterface.OnTrackingState;
                    @TrackingState.performed -= m_Wrapper.m_LeftHandTrackingActionsCallbackInterface.OnTrackingState;
                    @TrackingState.canceled -= m_Wrapper.m_LeftHandTrackingActionsCallbackInterface.OnTrackingState;
                }
                m_Wrapper.m_LeftHandTrackingActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Position.started += instance.OnPosition;
                    @Position.performed += instance.OnPosition;
                    @Position.canceled += instance.OnPosition;
                    @Rotation.started += instance.OnRotation;
                    @Rotation.performed += instance.OnRotation;
                    @Rotation.canceled += instance.OnRotation;
                    @TrackingState.started += instance.OnTrackingState;
                    @TrackingState.performed += instance.OnTrackingState;
                    @TrackingState.canceled += instance.OnTrackingState;
                }
            }
        }
        public LeftHandTrackingActions @LeftHandTracking => new LeftHandTrackingActions(this);

        // LeftHand Visuals
        private readonly InputActionMap m_LeftHandVisuals;
        private ILeftHandVisualsActions m_LeftHandVisualsActionsCallbackInterface;
        private readonly InputAction m_LeftHandVisuals_PrimaryButtonValue;
        private readonly InputAction m_LeftHandVisuals_SecondaryButtonValue;
        private readonly InputAction m_LeftHandVisuals_GripValue;
        private readonly InputAction m_LeftHandVisuals_TriggerValue;
        public struct LeftHandVisualsActions
        {
            private @XRControllerInput m_Wrapper;
            public LeftHandVisualsActions(@XRControllerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @PrimaryButtonValue => m_Wrapper.m_LeftHandVisuals_PrimaryButtonValue;
            public InputAction @SecondaryButtonValue => m_Wrapper.m_LeftHandVisuals_SecondaryButtonValue;
            public InputAction @GripValue => m_Wrapper.m_LeftHandVisuals_GripValue;
            public InputAction @TriggerValue => m_Wrapper.m_LeftHandVisuals_TriggerValue;
            public InputActionMap Get() { return m_Wrapper.m_LeftHandVisuals; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(LeftHandVisualsActions set) { return set.Get(); }
            public void SetCallbacks(ILeftHandVisualsActions instance)
            {
                if (m_Wrapper.m_LeftHandVisualsActionsCallbackInterface != null)
                {
                    @PrimaryButtonValue.started -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnPrimaryButtonValue;
                    @PrimaryButtonValue.performed -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnPrimaryButtonValue;
                    @PrimaryButtonValue.canceled -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnPrimaryButtonValue;
                    @SecondaryButtonValue.started -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnSecondaryButtonValue;
                    @SecondaryButtonValue.performed -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnSecondaryButtonValue;
                    @SecondaryButtonValue.canceled -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnSecondaryButtonValue;
                    @GripValue.started -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnGripValue;
                    @GripValue.performed -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnGripValue;
                    @GripValue.canceled -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnGripValue;
                    @TriggerValue.started -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnTriggerValue;
                    @TriggerValue.performed -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnTriggerValue;
                    @TriggerValue.canceled -= m_Wrapper.m_LeftHandVisualsActionsCallbackInterface.OnTriggerValue;
                }
                m_Wrapper.m_LeftHandVisualsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @PrimaryButtonValue.started += instance.OnPrimaryButtonValue;
                    @PrimaryButtonValue.performed += instance.OnPrimaryButtonValue;
                    @PrimaryButtonValue.canceled += instance.OnPrimaryButtonValue;
                    @SecondaryButtonValue.started += instance.OnSecondaryButtonValue;
                    @SecondaryButtonValue.performed += instance.OnSecondaryButtonValue;
                    @SecondaryButtonValue.canceled += instance.OnSecondaryButtonValue;
                    @GripValue.started += instance.OnGripValue;
                    @GripValue.performed += instance.OnGripValue;
                    @GripValue.canceled += instance.OnGripValue;
                    @TriggerValue.started += instance.OnTriggerValue;
                    @TriggerValue.performed += instance.OnTriggerValue;
                    @TriggerValue.canceled += instance.OnTriggerValue;
                }
            }
        }
        public LeftHandVisualsActions @LeftHandVisuals => new LeftHandVisualsActions(this);

        // RightHand
        private readonly InputActionMap m_RightHand;
        private IRightHandActions m_RightHandActionsCallbackInterface;
        private readonly InputAction m_RightHand_PrimaryButton;
        private readonly InputAction m_RightHand_SecondaryButton;
        private readonly InputAction m_RightHand_GripButton;
        private readonly InputAction m_RightHand_TriggerButton;
        private readonly InputAction m_RightHand_Scroll2D;
        private readonly InputAction m_RightHand_JoystickButtonPressed;
        public struct RightHandActions
        {
            private @XRControllerInput m_Wrapper;
            public RightHandActions(@XRControllerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @PrimaryButton => m_Wrapper.m_RightHand_PrimaryButton;
            public InputAction @SecondaryButton => m_Wrapper.m_RightHand_SecondaryButton;
            public InputAction @GripButton => m_Wrapper.m_RightHand_GripButton;
            public InputAction @TriggerButton => m_Wrapper.m_RightHand_TriggerButton;
            public InputAction @Scroll2D => m_Wrapper.m_RightHand_Scroll2D;
            public InputAction @JoystickButtonPressed => m_Wrapper.m_RightHand_JoystickButtonPressed;
            public InputActionMap Get() { return m_Wrapper.m_RightHand; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(RightHandActions set) { return set.Get(); }
            public void SetCallbacks(IRightHandActions instance)
            {
                if (m_Wrapper.m_RightHandActionsCallbackInterface != null)
                {
                    @PrimaryButton.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnPrimaryButton;
                    @PrimaryButton.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnPrimaryButton;
                    @PrimaryButton.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnPrimaryButton;
                    @SecondaryButton.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnSecondaryButton;
                    @SecondaryButton.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnSecondaryButton;
                    @SecondaryButton.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnSecondaryButton;
                    @GripButton.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnGripButton;
                    @GripButton.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnGripButton;
                    @GripButton.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnGripButton;
                    @TriggerButton.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTriggerButton;
                    @TriggerButton.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTriggerButton;
                    @TriggerButton.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnTriggerButton;
                    @Scroll2D.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnScroll2D;
                    @Scroll2D.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnScroll2D;
                    @Scroll2D.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnScroll2D;
                    @JoystickButtonPressed.started -= m_Wrapper.m_RightHandActionsCallbackInterface.OnJoystickButtonPressed;
                    @JoystickButtonPressed.performed -= m_Wrapper.m_RightHandActionsCallbackInterface.OnJoystickButtonPressed;
                    @JoystickButtonPressed.canceled -= m_Wrapper.m_RightHandActionsCallbackInterface.OnJoystickButtonPressed;
                }
                m_Wrapper.m_RightHandActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @PrimaryButton.started += instance.OnPrimaryButton;
                    @PrimaryButton.performed += instance.OnPrimaryButton;
                    @PrimaryButton.canceled += instance.OnPrimaryButton;
                    @SecondaryButton.started += instance.OnSecondaryButton;
                    @SecondaryButton.performed += instance.OnSecondaryButton;
                    @SecondaryButton.canceled += instance.OnSecondaryButton;
                    @GripButton.started += instance.OnGripButton;
                    @GripButton.performed += instance.OnGripButton;
                    @GripButton.canceled += instance.OnGripButton;
                    @TriggerButton.started += instance.OnTriggerButton;
                    @TriggerButton.performed += instance.OnTriggerButton;
                    @TriggerButton.canceled += instance.OnTriggerButton;
                    @Scroll2D.started += instance.OnScroll2D;
                    @Scroll2D.performed += instance.OnScroll2D;
                    @Scroll2D.canceled += instance.OnScroll2D;
                    @JoystickButtonPressed.started += instance.OnJoystickButtonPressed;
                    @JoystickButtonPressed.performed += instance.OnJoystickButtonPressed;
                    @JoystickButtonPressed.canceled += instance.OnJoystickButtonPressed;
                }
            }
        }
        public RightHandActions @RightHand => new RightHandActions(this);

        // RightHand Tracking
        private readonly InputActionMap m_RightHandTracking;
        private IRightHandTrackingActions m_RightHandTrackingActionsCallbackInterface;
        private readonly InputAction m_RightHandTracking_Position;
        private readonly InputAction m_RightHandTracking_Rotation;
        private readonly InputAction m_RightHandTracking_TrackingState;
        public struct RightHandTrackingActions
        {
            private @XRControllerInput m_Wrapper;
            public RightHandTrackingActions(@XRControllerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_RightHandTracking_Position;
            public InputAction @Rotation => m_Wrapper.m_RightHandTracking_Rotation;
            public InputAction @TrackingState => m_Wrapper.m_RightHandTracking_TrackingState;
            public InputActionMap Get() { return m_Wrapper.m_RightHandTracking; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(RightHandTrackingActions set) { return set.Get(); }
            public void SetCallbacks(IRightHandTrackingActions instance)
            {
                if (m_Wrapper.m_RightHandTrackingActionsCallbackInterface != null)
                {
                    @Position.started -= m_Wrapper.m_RightHandTrackingActionsCallbackInterface.OnPosition;
                    @Position.performed -= m_Wrapper.m_RightHandTrackingActionsCallbackInterface.OnPosition;
                    @Position.canceled -= m_Wrapper.m_RightHandTrackingActionsCallbackInterface.OnPosition;
                    @Rotation.started -= m_Wrapper.m_RightHandTrackingActionsCallbackInterface.OnRotation;
                    @Rotation.performed -= m_Wrapper.m_RightHandTrackingActionsCallbackInterface.OnRotation;
                    @Rotation.canceled -= m_Wrapper.m_RightHandTrackingActionsCallbackInterface.OnRotation;
                    @TrackingState.started -= m_Wrapper.m_RightHandTrackingActionsCallbackInterface.OnTrackingState;
                    @TrackingState.performed -= m_Wrapper.m_RightHandTrackingActionsCallbackInterface.OnTrackingState;
                    @TrackingState.canceled -= m_Wrapper.m_RightHandTrackingActionsCallbackInterface.OnTrackingState;
                }
                m_Wrapper.m_RightHandTrackingActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Position.started += instance.OnPosition;
                    @Position.performed += instance.OnPosition;
                    @Position.canceled += instance.OnPosition;
                    @Rotation.started += instance.OnRotation;
                    @Rotation.performed += instance.OnRotation;
                    @Rotation.canceled += instance.OnRotation;
                    @TrackingState.started += instance.OnTrackingState;
                    @TrackingState.performed += instance.OnTrackingState;
                    @TrackingState.canceled += instance.OnTrackingState;
                }
            }
        }
        public RightHandTrackingActions @RightHandTracking => new RightHandTrackingActions(this);

        // RightHand Visuals
        private readonly InputActionMap m_RightHandVisuals;
        private IRightHandVisualsActions m_RightHandVisualsActionsCallbackInterface;
        private readonly InputAction m_RightHandVisuals_PrimaryButtonValue;
        private readonly InputAction m_RightHandVisuals_SecondaryButtonValue;
        private readonly InputAction m_RightHandVisuals_GripValue;
        private readonly InputAction m_RightHandVisuals_TriggerValue;
        public struct RightHandVisualsActions
        {
            private @XRControllerInput m_Wrapper;
            public RightHandVisualsActions(@XRControllerInput wrapper) { m_Wrapper = wrapper; }
            public InputAction @PrimaryButtonValue => m_Wrapper.m_RightHandVisuals_PrimaryButtonValue;
            public InputAction @SecondaryButtonValue => m_Wrapper.m_RightHandVisuals_SecondaryButtonValue;
            public InputAction @GripValue => m_Wrapper.m_RightHandVisuals_GripValue;
            public InputAction @TriggerValue => m_Wrapper.m_RightHandVisuals_TriggerValue;
            public InputActionMap Get() { return m_Wrapper.m_RightHandVisuals; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(RightHandVisualsActions set) { return set.Get(); }
            public void SetCallbacks(IRightHandVisualsActions instance)
            {
                if (m_Wrapper.m_RightHandVisualsActionsCallbackInterface != null)
                {
                    @PrimaryButtonValue.started -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnPrimaryButtonValue;
                    @PrimaryButtonValue.performed -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnPrimaryButtonValue;
                    @PrimaryButtonValue.canceled -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnPrimaryButtonValue;
                    @SecondaryButtonValue.started -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnSecondaryButtonValue;
                    @SecondaryButtonValue.performed -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnSecondaryButtonValue;
                    @SecondaryButtonValue.canceled -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnSecondaryButtonValue;
                    @GripValue.started -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnGripValue;
                    @GripValue.performed -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnGripValue;
                    @GripValue.canceled -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnGripValue;
                    @TriggerValue.started -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnTriggerValue;
                    @TriggerValue.performed -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnTriggerValue;
                    @TriggerValue.canceled -= m_Wrapper.m_RightHandVisualsActionsCallbackInterface.OnTriggerValue;
                }
                m_Wrapper.m_RightHandVisualsActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @PrimaryButtonValue.started += instance.OnPrimaryButtonValue;
                    @PrimaryButtonValue.performed += instance.OnPrimaryButtonValue;
                    @PrimaryButtonValue.canceled += instance.OnPrimaryButtonValue;
                    @SecondaryButtonValue.started += instance.OnSecondaryButtonValue;
                    @SecondaryButtonValue.performed += instance.OnSecondaryButtonValue;
                    @SecondaryButtonValue.canceled += instance.OnSecondaryButtonValue;
                    @GripValue.started += instance.OnGripValue;
                    @GripValue.performed += instance.OnGripValue;
                    @GripValue.canceled += instance.OnGripValue;
                    @TriggerValue.started += instance.OnTriggerValue;
                    @TriggerValue.performed += instance.OnTriggerValue;
                    @TriggerValue.canceled += instance.OnTriggerValue;
                }
            }
        }
        public RightHandVisualsActions @RightHandVisuals => new RightHandVisualsActions(this);
        private int m_GenericXRControllerSchemeIndex = -1;
        public InputControlScheme GenericXRControllerScheme
        {
            get
            {
                if (m_GenericXRControllerSchemeIndex == -1) m_GenericXRControllerSchemeIndex = asset.FindControlSchemeIndex("Generic XR Controller");
                return asset.controlSchemes[m_GenericXRControllerSchemeIndex];
            }
        }
        public interface ILeftHandActions
        {
            void OnPrimaryButton(InputAction.CallbackContext context);
            void OnSecondaryButton(InputAction.CallbackContext context);
            void OnGripButton(InputAction.CallbackContext context);
            void OnTriggerButton(InputAction.CallbackContext context);
            void OnScroll2D(InputAction.CallbackContext context);
            void OnJoystickButtonPressed(InputAction.CallbackContext context);
        }
        public interface ILeftHandTrackingActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnRotation(InputAction.CallbackContext context);
            void OnTrackingState(InputAction.CallbackContext context);
        }
        public interface ILeftHandVisualsActions
        {
            void OnPrimaryButtonValue(InputAction.CallbackContext context);
            void OnSecondaryButtonValue(InputAction.CallbackContext context);
            void OnGripValue(InputAction.CallbackContext context);
            void OnTriggerValue(InputAction.CallbackContext context);
        }
        public interface IRightHandActions
        {
            void OnPrimaryButton(InputAction.CallbackContext context);
            void OnSecondaryButton(InputAction.CallbackContext context);
            void OnGripButton(InputAction.CallbackContext context);
            void OnTriggerButton(InputAction.CallbackContext context);
            void OnScroll2D(InputAction.CallbackContext context);
            void OnJoystickButtonPressed(InputAction.CallbackContext context);
        }
        public interface IRightHandTrackingActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnRotation(InputAction.CallbackContext context);
            void OnTrackingState(InputAction.CallbackContext context);
        }
        public interface IRightHandVisualsActions
        {
            void OnPrimaryButtonValue(InputAction.CallbackContext context);
            void OnSecondaryButtonValue(InputAction.CallbackContext context);
            void OnGripValue(InputAction.CallbackContext context);
            void OnTriggerValue(InputAction.CallbackContext context);
        }
    }
}
